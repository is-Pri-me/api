# This workflow should control anything to do with API
# Including tests, building the docker image and pushing it
# It should run on both development and production scenarios
# Production workflow (tagging the image as "latest") should run only on tagged version push

name: API workflow

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [main]

jobs:
  # TODO: Tests are disabled for now, until we write some
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python 3.11
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.11"
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #         pip install -r requirements-dev.txt
  #     - name: Test with pytest
  #       env:
  #         NPZ_ACCESS_KEY: ${{ secrets.NPZ_ACCESS_KEY }}
  #         NPZ_SECRET_KEY: ${{ secrets.NPZ_SECRET_KEY }}
  #         NPZ_BUCKET_NAME: ${{ secrets.NPZ_BUCKET_NAME }}
  #         NPZ_ENDPOINT_URL: ${{ secrets.NPZ_ENDPOINT_URL }}
  #       run: |
  #         pytest --cov=/ --cov-report=xml tests/
  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v3

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Metadata for Docker
        # Docs: https://github.com/docker/metadata-action
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=edge
            type=sha

      - name: Login to DockerHub
        # Docs: https://github.com/docker/login-action
        if: ${{ github.actor != 'dependabot[bot]' }} # dependabot[bot] will not have Dockerhub secrets
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        # Docs: https://github.com/docker/build-push-action
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name != 'pull_request' }} # Push only on non-PR events
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # TODO: Deploy is disabled for now, until we have a server to deploy to
  # deploy:
  #   if: ${{ github.event_name != 'pull_request' }} # Deploy shouldn't run on PRs
  #   needs: [test, build] # This job will run only if other jobs were successful
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Trigger deploy via SSH
  #       # Docs: https://github.com/appleboy/ssh-action
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SSH_DEPLOYMENT_HOST }}
  #         port: ${{ secrets.SSH_DEPLOYMENT_PORT }}
  #         username: ${{ secrets.SSH_DEPLOYMENT_USER }}
  #         key: ${{ secrets.SSH_DEPLOYMENT_KEY }}
